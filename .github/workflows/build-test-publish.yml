#    Copyright (c) Perpetual Intelligence L.L.C. All Rights Reserved.
#
#    For license, terms, and data policies, go to:
#    https://terms.perpetualintelligence.com

name: build-test-publish

on:
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  actions: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pi-docs"
  cancel-in-progress: false

jobs:  
  documentation:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    timeout-minutes: 20

    env:
      PI_CI_REFERENCE: cross

    steps:
    
      # Docs Repo
      - name: Checkout Docs
        uses: actions/checkout@v3
        with:
          path: docs
                    
      # shared repo
      - name: Checkout Shared
        uses: actions/checkout@v3
        with:
          repository: perpetualintelligence/shared
          path: shared
          
       # oneterminal repo
      - name: Checkout Terminal
        uses: actions/checkout@v3
        with:
          repository: perpetualintelligence/terminal
          path: terminal
          token: ${{ secrets.PI_GITHUB_PAT }}
     
      # Print debug
      - name: Print
        if: ${{ false }}  # Debug
        run: |
          env
          ls -R
        shell: bash
        continue-on-error: false 
        
      # Setup .Net
      # Bug: Looks like the global.json is not getting picked by docfx build, so specify version explicitly
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: docs/global.json
      
      # Restore dependencies
      # Restore using specified nuget.config
      - name: Restore
        run: dotnet restore docs/docfx_project/src/Documentation.Solution.sln --configfile docs/nuget.config

      # Install docfx
      - name: Setup docfc
        run: dotnet tool update -g docfx
        continue-on-error: false
  
      # Build docfx_project
      - name: Build
        run: docfx docs/docfx_project/docfx.json
        continue-on-error: false

      # Build docfx and upload
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: docs/docfx_project/_site

      # Deploy to GitHub Pages
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4