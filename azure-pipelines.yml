#    Copyright 2021 Perpetual Intelligence L.L.C. All Rights Reserved.
#
#    Licensed under the Apache License, Version 2.0.
#    https://github.com/perpetualintelligence/terms/blob/main/LICENSE
#
#    Additional terms and policies.
#    https://github.com/perpetualintelligence/terms/blob/main/policies.md

# This is the Azure pipeline yml configuration file to build and publish the documentation site.
# The pipeline uses Nuget to install the docfx tool and then builds the docfx_project. 

# Pipeline name e.g. 2.3.5-docs.21122505
name: $(PI_LIBRARY_MAJORVERSION).$(PI_LIBRARY_MINORVERSION).$(PI_LIBRARY_BUILDVERSION).$(Date:yyMMdd)$(Rev:rr)

# NO CI Trigger, Manual release.
trigger: none

# Provide access to cadence variables.
variables:
- group: CadenceVariables

# Build jobs
jobs:
- job: Windows
  displayName: Hosted Windows

  pool:
    vmImage: windows-latest
    name: Azure Pipelines

  # https://docs.microsoft.com/en-us/azure/devops/pipelines/scripts/git-commands?view=azure-devops&tabs=yaml#allow-scripts-to-access-the-system-token
  # Make sure we allow scripts to access the system token, otherwise scripts cannot execute git push
  # Make sure to clean up the local repo
  # Certain kinds of changes to the local repository are not automatically cleaned up by the build pipeline. So make sure to:
  #   Delete local branches you create.
  #   Undo git config changes.
  # If you run into problems using an on-premises agent, make sure the repo is clean:  
  steps:
  - checkout: self
    persistCredentials: true
    clean: true

  # Download the latest docfx_project build artifact
  # For us this is the drop/<artifact>
  - task: DownloadPipelineArtifact@2
    displayName: Download artifact
    inputs:
      buildType: 'specific'
      project: '$(PI_BUILD_PROJECT_ID)'
      definition: $(PI_BUILD_DEFINITION)'
      buildVersionToDownload: 'latest'
      targetPath: '$(Pipeline.Workspace)'   

  # Extract the artifact to the $(Build.SourcesDirectory)/docs
  # GitHub pages looks for the docs folder so we extract the generated 
  # documentation in the /docs folder. In the next step we will add all
  # files in the /docs folder for git commit and put it to the repo.
  - task: ExtractFiles@1
    displayName: Extract docs
    inputs:
      archiveFilePatterns: '$(Pipeline.Workspace)/drop/PerpetualIntelligence.Docs.Site*.zip'
      destinationFolder: '$(Build.SourcesDirectory)/docs'
      cleanDestinationFolder: true
      overwriteExistingFiles: false

  # Set the git config, commit and push.
  # The pipeline checksout all the repo file, but we only commit the docs folder.
  # PTA anyway will not give access to change all the files such as workflow in the repo.
  - task: PowerShell@2
    displayName: Commit and push to GitHub 
    inputs:
      targetType: 'inline'
      script: |
        git config user.name "${env:PI_GITHUB_USERNAME}"
        git config user.email "${env:PI_GITHUB_EMAIL}"
        git config core.autocrlf false
        git status
        git checkout -b master
        git add docs --all
        git status
        git commit -m "docfx_release_docs ${env:BUILD_BUILDNUMBER} [skip ci]"        
      workingDirectory: '$(Build.SourcesDirectory)'
    enabled: true
  
  # Dump dir
  - task: PowerShell@2
    displayName: Enumerate
    inputs:
      targetType: inline
      script: Get-ChildItem -Path $(Pipeline.Workspace) -Recurse
    enabled : true
...

